name: 'laba 2'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure CMake
        run: cmake -B build . -DPATCH_VERSION=${{ github.run_number }}

      - name: Building
        run: cmake --build build

      - name: run Tests
        run: ./build/gtests/gtests

      - name: Run Program
        run: ./build/lb2 < ./ip_filter.tsv

      - name: Make pkg
        run: cmake --build build --target package

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-package
          path: build/lb2-0.0.${{ github.run_number }}-Linux.deb

  build-windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure with CMake
        run: |
          cmake -B build . -DPATCH_VERSION=${{ github.run_number }}

      - name: Build project
        run: cmake --build build --config Release

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: build/Release/lb2.exe

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions: write-all
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-package

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lb2-0.0.${{ github.run_number }}-Linux.deb
          asset_name: lb2-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lb2.exe
          asset_name: lb2-0.0.${{ github.run_number }}-Windows.exe
          asset_content_type: application/x-msdownload